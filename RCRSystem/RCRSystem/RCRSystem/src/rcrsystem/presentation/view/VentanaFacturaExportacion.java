package rcrsystem.presentation.view;

import Modelo.Lista_Empaque;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Locale;
import java.util.Observable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import rcrsystem.presentation.controller.Factura_Exportacion_Controlador;
import rcrsystem.presentation.controller.Facturar_Controlador;
import rcrsystem.presentation.controller.Progreso_Confirmar_FacturaExpo;
import rcrsystem.presentation.model.Facturar_Modelo;

public class VentanaFacturaExportacion extends javax.swing.JFrame implements java.util.Observer {

    VentanaCarga ventana;
    public VentanaFacturacion vf;

    public VentanaFacturaExportacion(VentanaFacturacion vf, boolean modal) {
        ventana = new VentanaCarga();
        this.vf = vf;
        initComponents();
        this.setTitle("Factura de Exportación"); //Usualmente se establece en initComponents
        addWindowListener(exitListener);
        this.setResizable(false);
        setIconImage(new ImageIcon(getClass().getResource("/rcrsystem/presentation/view/iconos/logoRCR.png")).getImage());
        setLocationRelativeTo(null);

        campoFecha1.setDate(new Date());
        JTextFieldDateEditor editor = (JTextFieldDateEditor) campoFecha1.getDateEditor();
        editor.setEditable(false);
        campoFecha1.setLocale(new Locale("es"));

        campoFecha2.setDate(new Date());
        JTextFieldDateEditor editor2 = (JTextFieldDateEditor) campoFecha2.getDateEditor();
        editor2.setEditable(false);
        campoFecha2.setLocale(new Locale("es"));

        campoFecha3.setDate(new Date());
        JTextFieldDateEditor editor3 = (JTextFieldDateEditor) campoFecha3.getDateEditor();
        editor3.setEditable(false);
        campoFecha3.setLocale(new Locale("es"));

        campoFecha4.setDate(new Date());
        JTextFieldDateEditor editor4 = (JTextFieldDateEditor) campoFecha4.getDateEditor();
        editor4.setEditable(false);
        campoFecha4.setLocale(new Locale("es"));
    }

    WindowListener exitListener = new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
            if (vf != null) {
                vf.setVisible(true);
            }
            dispose();
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        lbTotalBultos = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbSubtotal = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        lbPesoNeto = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtFlete = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        lbPesoBruto = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtOrigen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtPuertoDestino = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtPO = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtPuertoEmbarque = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtIcoterm = new javax.swing.JTextField();
        campoFecha1 = new com.toedter.calendar.JDateChooser();
        campoFecha2 = new com.toedter.calendar.JDateChooser();
        campoFecha3 = new com.toedter.calendar.JDateChooser();
        campoFecha4 = new com.toedter.calendar.JDateChooser();
        txtTransporte = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtPuertoExportacion = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtVendido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEnviado = new javax.swing.JTextField();
        numFactura = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnConfirmarFactura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Factura Exportacion");
        setBackground(new java.awt.Color(27, 82, 156));
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(27, 82, 156));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("FACTURA DE EXPORTACIÓN");

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel28.setText("Total bultos:");

        lbTotalBultos.setText("0");

        jLabel10.setText("Peso neto:");

        lbSubtotal.setText("0.0");

        jLabel33.setText("Peso bruto:");

        lbPesoNeto.setText("0.0");

        jLabel35.setText("Flete:");

        txtFlete.setText("0.0");
        txtFlete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFleteActionPerformed(evt);
            }
        });
        txtFlete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFleteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFleteKeyTyped(evt);
            }
        });

        jLabel36.setText("Sub total:");

        jLabel38.setText("Total:");

        lbTotal.setText("0.0");

        lbPesoBruto.setText("0.0");

        jLabel13.setText("$");

        jLabel14.setText("$");

        jLabel15.setText("$");

        jLabel16.setText("Kg");

        jLabel17.setText("Kg");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbTotalBultos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbPesoBruto))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(lbPesoNeto)))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel36))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSubtotal)
                    .addComponent(lbTotal)
                    .addComponent(txtFlete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(lbTotalBultos))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(lbSubtotal)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(lbPesoBruto)
                            .addComponent(jLabel38)
                            .addComponent(lbTotal)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFlete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lbPesoNeto)
                            .addComponent(jLabel16))
                        .addGap(81, 81, 81))))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText("Fecha factura: ");

        jLabel7.setText("País de Origen:");

        txtOrigen.setText("Costa Rica");
        txtOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrigenActionPerformed(evt);
            }
        });

        jLabel8.setText("Fecha de embarque:");

        jLabel9.setText("Puerto de embarque");

        jLabel11.setText("Fecha de exportación:");

        jLabel26.setText("Puerto destinatario:");

        txtPuertoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPuertoDestinoActionPerformed(evt);
            }
        });
        txtPuertoDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuertoDestinoKeyTyped(evt);
            }
        });

        jLabel27.setText("PO:");

        txtPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPOActionPerformed(evt);
            }
        });
        txtPO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPOKeyTyped(evt);
            }
        });

        jLabel30.setText("Fecha de despacho:");

        txtPuertoEmbarque.setText("Peñas Blancas");
        txtPuertoEmbarque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPuertoEmbarqueActionPerformed(evt);
            }
        });

        jLabel12.setText("Icoterm:");

        txtIcoterm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIcotermActionPerformed(evt);
            }
        });
        txtIcoterm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIcotermKeyTyped(evt);
            }
        });

        txtTransporte.setEnabled(false);

        jLabel18.setText("Puerto de exportación:");

        txtPuertoExportacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuertoExportacionKeyTyped(evt);
            }
        });

        jLabel19.setText("Método de transporte:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoFecha3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIcoterm, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGap(21, 21, 21)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(campoFecha1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(campoFecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(23, 23, 23)
                            .addComponent(txtPuertoEmbarque, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel27)
                                        .addComponent(jLabel26)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPO, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoFecha4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPuertoDestino, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(txtPuertoExportacion))
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(campoFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(txtPuertoExportacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26))
                            .addComponent(jLabel7))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(txtPO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPuertoEmbarque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoFecha4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(txtTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(campoFecha3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(txtIcoterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("No.");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Vendido a:");

        txtVendido.setEditable(false);
        txtVendido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendidoActionPerformed(evt);
            }
        });

        jLabel5.setText("Enviado a:");

        txtEnviado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnviadoActionPerformed(evt);
            }
        });
        txtEnviado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnviadoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtVendido, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(txtEnviado))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtVendido, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEnviado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        numFactura.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        numFactura.setText("1");

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Material", "Cantidad despachada  (Kg)", "Descripción", "Cantidad bultos", "Precio uni. (USD)", "Importe (USD)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("Bultos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnConfirmarFactura.setText("Confirmar");
        btnConfirmarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarFacturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConfirmarFactura)
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmarFactura)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(numFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(270, 270, 270))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEnviadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnviadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnviadoActionPerformed

    private void txtVendidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendidoActionPerformed

    private void btnConfirmarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarFacturaActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Seguro que desea confirmar la factura?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION) {
            ventana = new VentanaCarga();
            Progreso_Confirmar_FacturaExpo p = new Progreso_Confirmar_FacturaExpo(ventana, this);
            p.execute();
            //  this.confirmar();
        }
    }//GEN-LAST:event_btnConfirmarFacturaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            int row = this.jTable1.getSelectedRow();
            Factura_Exportacion_Controlador controlador = new Factura_Exportacion_Controlador(this, modelo);
            controller.abrir(row, "$");

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (vf != null) {
            vf.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtFleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFleteKeyPressed
        char car = (char) evt.getKeyCode();
        if (car == KeyEvent.VK_ENTER) {

            try {
                BigDecimal flete = new BigDecimal(this.txtFlete.getText());
                txtFlete.setBorder(BorderFactory.createLineBorder(Color.GRAY));
                txtFlete.setToolTipText("");
                if (txtFlete.getText().equals("")) {
                    txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
                    txtFlete.setToolTipText("No se permiten espacios vacíos");
                    JOptionPane.showMessageDialog(null, "No se permiten espacios vacios. Ingrese el flete");
                } else if (flete.compareTo(new BigDecimal("0")) == -1) {
                    txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
                    txtFlete.setToolTipText("El flete debe ser mayor a 0");
                    JOptionPane.showMessageDialog(null, "Ingrese valor flete mayor a 0");
                } else {
                    BigDecimal subtotal = new BigDecimal(this.lbSubtotal.getText());
                    BigDecimal total = subtotal.add(flete);
                    this.lbTotal.setText(String.valueOf(total));
                }

            } catch (NumberFormatException e) {
                txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
                txtFlete.setToolTipText("Sòlo se permiten números");
                JOptionPane.showMessageDialog(null, "Solo se permiten números. Ingrese un flete válido");
            }

        }


    }//GEN-LAST:event_txtFleteKeyPressed

    private void txtFleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFleteActionPerformed

    private void txtPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPOActionPerformed

    private void txtPuertoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPuertoDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPuertoDestinoActionPerformed

    private void txtIcotermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIcotermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIcotermActionPerformed

    private void txtOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrigenActionPerformed

    private void txtEnviadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnviadoKeyTyped
        if (this.txtEnviado.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnviadoKeyTyped

    private void txtIcotermKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIcotermKeyTyped
        if (this.txtIcoterm.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here        // TODO add your handling code here:
    }//GEN-LAST:event_txtIcotermKeyTyped

    private void txtPuertoDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuertoDestinoKeyTyped
        if (this.txtPuertoDestino.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here        // TODO add your handling code here:
    }//GEN-LAST:event_txtPuertoDestinoKeyTyped

    private void txtPOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPOKeyTyped
        if (this.txtPO.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here        // TODO add your handling code here:
    }//GEN-LAST:event_txtPOKeyTyped

    private void txtFleteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFleteKeyTyped
        if (this.txtFlete.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }        // TODO add your handling code here        // TODO add your handling code here:
    }//GEN-LAST:event_txtFleteKeyTyped

    private void txtPuertoEmbarqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPuertoEmbarqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPuertoEmbarqueActionPerformed

    private void txtPuertoExportacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuertoExportacionKeyTyped
        if (this.txtPuertoExportacion.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPuertoExportacionKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturaExportacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new VentanaFacturaExportacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmarFactura;
    public com.toedter.calendar.JDateChooser campoFecha1;
    public com.toedter.calendar.JDateChooser campoFecha2;
    public com.toedter.calendar.JDateChooser campoFecha3;
    public com.toedter.calendar.JDateChooser campoFecha4;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JLabel lbPesoBruto;
    public javax.swing.JLabel lbPesoNeto;
    public javax.swing.JLabel lbSubtotal;
    public javax.swing.JLabel lbTotal;
    public javax.swing.JLabel lbTotalBultos;
    public javax.swing.JLabel numFactura;
    public javax.swing.JTextField txtEnviado;
    public javax.swing.JTextField txtFlete;
    public javax.swing.JTextField txtIcoterm;
    public javax.swing.JTextField txtOrigen;
    public javax.swing.JTextField txtPO;
    public javax.swing.JTextField txtPuertoDestino;
    public javax.swing.JTextField txtPuertoEmbarque;
    public javax.swing.JTextField txtPuertoExportacion;
    private javax.swing.JTextField txtTransporte;
    public javax.swing.JTextField txtVendido;
    // End of variables declaration//GEN-END:variables

    Factura_Exportacion_Controlador controller;
    Facturar_Modelo modelo;

    public void setController(Factura_Exportacion_Controlador controller) {
        this.controller = controller;
    }

    public void setModel(Facturar_Modelo modelo) {
        this.modelo = modelo;
        modelo.addObserver(this);
    }

    @Override
    public void update(Observable updatedModel, Object parametros) {
        if (parametros != Facturar_Modelo.ae_lista_empaque_actual) {
            System.out.println("return");
            return;
        }
        Lista_Empaque listaEmp = modelo.obtener_lista_empaque_actual();
        this.txtVendido.setText("(" + listaEmp.obtener_cliente().obtener_codigo_c() + ")  " + listaEmp.obtener_cliente().obtener_nombre_c());
        this.txtEnviado.setText(listaEmp.obtener_cliente().obtener_nombre_c() + ". " + listaEmp.obtener_cliente().obtener_direccion_c());
        this.jTable1.setModel(modelo.obtener_total_material_lista_empaque());
        String fechaActual = controller.obtener_fecha();
        String dia = fechaActual.substring(0, 2);
//        this.diaDespacho.setSelectedItem(dia);
//        this.diaEmbarque.setSelectedItem(dia);
//        this.diaExportacion.setSelectedItem(dia);
//        this.diaFactufa.setSelectedItem(dia);
//        String mes = fechaActual.substring(3, 5);
//        this.mesDespacho.setSelectedItem(controller.mes_numero(mes));
//        this.mesEmbarque.setSelectedItem(controller.mes_numero(mes));
//        this.mesExportacion.setSelectedItem(controller.mes_numero(mes));
//        this.mesFactura.setSelectedItem(controller.mes_numero(mes));
//        String año = fechaActual.substring(6);
//        this.añoDespacho.setText(año);
//        this.añoEmbarque.setText(año);
//        this.añoExportacion.setText(año);
//        this.añoFactura.setText(año);
        if (listaEmp.obtener_medio_transporte() == 1) {
            this.txtTransporte.setText("Marítimo");
        } else {
            this.txtTransporte.setText("Terrestre");
        }

        this.numFactura.setText(fechaActual.substring(6) + "-" + listaEmp.obtener_codigo_l());
        TableModel tabla = modelo.obtener_total_material_lista_empaque();
        BigDecimal subTotal = new BigDecimal("0");
        BigDecimal total = new BigDecimal("0");
        BigDecimal pesoNeto = new BigDecimal("0");
        BigDecimal pesoBruto = new BigDecimal("0");
         int totalBultos = 0;
        for (int i = 0; i < modelo.obtener_total_material_lista_empaque().getRowCount(); i++) {
            totalBultos = totalBultos + modelo.obtener_total_material_lista_empaque().obtener_fila_a(i).obtener_cantidad_bultos_v();
            subTotal = subTotal.add(modelo.obtener_total_material_lista_empaque().obtener_fila_a(i).obtener_importe());
            pesoNeto = pesoNeto.add(modelo.obtener_total_material_lista_empaque().obtener_fila_a(i).obtener_peso_total_v());
            pesoBruto = pesoBruto.add(modelo.obtener_total_material_lista_empaque().obtener_fila_a(i).obtener_peso_total_v());
        }
        total = subTotal.add(new BigDecimal(this.txtFlete.getText()));
        this.lbTotalBultos.setText(String.valueOf(totalBultos));
        this.lbPesoBruto.setText(String.valueOf(pesoBruto));
        this.lbSubtotal.setText(String.valueOf(subTotal));
        this.lbPesoNeto.setText(String.valueOf(pesoNeto));
        this.lbTotal.setText(String.valueOf(total));
        this.jTable1.setModel(tabla);
        if (listaEmp.obtener_medio_transporte() == 1) {
            this.txtTransporte.setText("Marítimo");
        } else {
            this.txtTransporte.setText("Terrestre");
        }
        this.validate();
    }

    public void confirmar(VentanaCarga a_carga2) {
        campoFecha1.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        campoFecha1.setToolTipText("");
        campoFecha2.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        campoFecha2.setToolTipText("");
        campoFecha3.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        campoFecha3.setToolTipText("");
        campoFecha4.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        campoFecha4.setToolTipText("");
        txtPuertoDestino.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtPuertoDestino.setToolTipText("");
        txtPuertoExportacion.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtPuertoExportacion.setToolTipText("");
        txtPuertoEmbarque.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtPuertoEmbarque.setToolTipText("");
        txtPO.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtPO.setToolTipText("");
        txtFlete.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtFlete.setToolTipText("");
        txtEnviado.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtEnviado.setToolTipText("");
        txtIcoterm.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        txtIcoterm.setToolTipText("");
        boolean bandera = false;
        try {
            BigDecimal flete = new BigDecimal(this.txtFlete.getText());
            txtFlete.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            txtFlete.setToolTipText("");
            if (txtFlete.getText().equals("")) {
                a_carga2.setVisible(false);
                txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
                txtFlete.setToolTipText("No se permiten espacios vacíos");
                if (bandera == false) {
                    JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el flete");
                    bandera = true;
                }
            } else if (flete.compareTo(new BigDecimal("0")) == -1) {
                a_carga2.setVisible(false);
                txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
                txtFlete.setToolTipText("El flete debe ser mayor a 0");
                if (bandera == false) {
                    JOptionPane.showMessageDialog(null, "Ingrese un valor para el flete mayor a 0");
                    bandera = true;
                }
            } else {
                BigDecimal subtotal = new BigDecimal(this.lbSubtotal.getText());
                BigDecimal total = subtotal.add(flete);
                this.lbTotal.setText(String.valueOf(total));
            }

        } catch (NumberFormatException e) {
            a_carga2.setVisible(false);
            bandera = true;
            txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
            txtFlete.setToolTipText("Sòlo se permiten números");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "Solo se permiten números. Ingrese un flete válido");
                bandera = true;
            }
        }

        if (campoFecha1.getDate() == null) {
            a_carga2.setVisible(false);
            if (bandera == false) {
                campoFecha1.setBorder(BorderFactory.createLineBorder(Color.red));
                campoFecha1.setToolTipText("No se permiten espacios vacíos. Ingrese la fecha de Factura");
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese la fecha de Factura");
                bandera = true;
            }
        } else if (campoFecha2.getDate() == null) {
            a_carga2.setVisible(false);
            if (bandera == false) {
                campoFecha2.setBorder(BorderFactory.createLineBorder(Color.red));
                campoFecha2.setToolTipText("No se permiten espacios vacíos. Ingrese la fecha de embarque");
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese la fecha de embarque");
                bandera = true;
            }
        } else if (campoFecha3.getDate() == null) {
            a_carga2.setVisible(false);
            if (bandera == false) {
                campoFecha3.setBorder(BorderFactory.createLineBorder(Color.red));
                campoFecha3.setToolTipText("No se permiten espacios vacíos. Ingrese la fecha de exportación");
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese la fecha de exportación");
                bandera = true;
            }
        } else if (campoFecha4.getDate() == null) {
            a_carga2.setVisible(false);
            if (bandera == false) {
                campoFecha4.setBorder(BorderFactory.createLineBorder(Color.red));
                campoFecha4.setToolTipText("No se permiten espacios vacíos. Ingrese la fecha de despacho");
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese la fecha de despacho");
                bandera = true;
            }
        } else if (txtPuertoDestino.getText().equals("")) {
            a_carga2.setVisible(false);
            txtPuertoDestino.setBorder(BorderFactory.createLineBorder(Color.red));
            txtPuertoDestino.setToolTipText("No se permiten espacios vacíos. Ingrese el puerto de destino");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el puerto de destino");
                bandera = true;
            }
        } else if (txtPuertoExportacion.getText().equals("")) {
            a_carga2.setVisible(false);
            txtPuertoExportacion.setBorder(BorderFactory.createLineBorder(Color.red));
            txtPuertoExportacion.setToolTipText("No se permiten espacios vacíos. Ingrese el puerto de exportación");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el puerto de exportación");
                bandera = true;
            }
        } else if (txtPuertoEmbarque.getText().equals("")) {
            a_carga2.setVisible(false);
            txtPuertoEmbarque.setBorder(BorderFactory.createLineBorder(Color.red));
            txtPuertoEmbarque.setToolTipText("No se permiten espacios vacíos. Ingrese el puerto de embarque");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el puerto de embarque");
                bandera = true;
            }
        } else if (txtPO.getText().equals("")) {
            a_carga2.setVisible(false);
            txtPO.setBorder(BorderFactory.createLineBorder(Color.red));
            txtPO.setToolTipText("No se permiten espacios vacíos. Ingrese el PO");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el PO");
                bandera = true;
            }
        } else if (txtFlete.getText().equals("")) {
            a_carga2.setVisible(false);
            txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
            txtFlete.setToolTipText("No se permiten espacios vacíos. Ingrese el flete");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el flete");
                bandera = true;
            }
        } else if (txtFlete.getText().equals("0.0")) {
            a_carga2.setVisible(false);
            txtFlete.setBorder(BorderFactory.createLineBorder(Color.red));
            txtFlete.setToolTipText("El flete debe ser mayor a 0.0");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "El flete debe ser mayor a 0.0");
                bandera = true;
            }
        } else if (txtEnviado.getText().equals("")) {
            a_carga2.setVisible(false);
            txtEnviado.setBorder(BorderFactory.createLineBorder(Color.red));

            txtEnviado.setToolTipText("No se permiten espacios vacíos. Ingrese el destino");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el destino");
                bandera = true;
            }
        } else if (txtIcoterm.getText().equals("")) {
            a_carga2.setVisible(false);
            txtIcoterm.setBorder(BorderFactory.createLineBorder(Color.red));
            txtIcoterm.setToolTipText("No se permiten espacios vacíos. Ingrese el Icoterm");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el Icoterm");
                bandera = true;
            }
        } else if (txtOrigen.getText().equals("")) {
            a_carga2.setVisible(false);
            txtOrigen.setBorder(BorderFactory.createLineBorder(Color.red));
            txtOrigen.setToolTipText("No se permiten espacios vacíos. Ingrese el Origen");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el origen");
                bandera = true;
            }
        } else if (txtPO.getText().equals("")) {
            a_carga2.setVisible(false);
            txtPO.setBorder(BorderFactory.createLineBorder(Color.red));
            txtPO.setToolTipText("No se permiten espacios vacíos. Ingrese el PO");
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No se permiten espacios vacíos. Ingrese el PO ");
                bandera = true;
            }
        } else if (validar_bultos()) {
            a_carga2.setVisible(false);
            if (bandera == false) {
                JOptionPane.showMessageDialog(null, "No ha modificado el precio de todos los elementos de la tabla");

            }
        } else {

            int i = controller.confirmar_Factura();
            a_carga2.setVisible(false);
            switch (i) {
                case 2:
                    JOptionPane.showMessageDialog(null, "No se pudo conectar a la Base de Datos, "
                            + "verifique que se encuentre el línea", "Error de Conexión", JOptionPane.ERROR_MESSAGE);
                    break;
                default:
                    controller.cerrar();
                    try {
                        this.setVisible(false);
                        VentanaFacturacion aplicacion = new VentanaFacturacion(this);

                        rcrsystem.presentation.model.Facturar_Modelo modelo = new rcrsystem.presentation.model.Facturar_Modelo();

                        VentanaFacturacion vista = new VentanaFacturacion(this);
                        Facturar_Controlador controlador = new Facturar_Controlador(vista, modelo);
                        this.setVisible(false);
                        vista.setVisible(true);
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(null, "¡Facturación completada con exito!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    } catch (Exception ex) {
                        Logger.getLogger(VentIngresarRegCompra.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
            }
        }
    }

    boolean validar_bultos() {
        for (int i = 0; i < modelo.obtener_total_material_lista_empaque().getRowCount(); i++) {
            if (String.valueOf(this.jTable1.getValueAt(i, 4)).equals("0")) {
                return true;
            }
        }
        return false;
    }
}
